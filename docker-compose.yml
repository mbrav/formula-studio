version: "3"

services:
    postgres:
        container_name: formula-studio-postgres
        image: postgres:alpine
        restart: "on-failure"
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - ./docker/postgres/:/docker-entrypoint-initdb.d/
            - postgresql-data:/var/lib/postgresql/data
        networks:
            - main

    app:
        container_name: formula-studio-django
        restart: "on-failure"
        build:
            context: ./backend/
        ports:
            - "${DJANGO_PORT}:8000"
        volumes:
            - ./backend:/App
        command: >
            sh -c  "python manage.py wait_for_db &&
                    python manage.py makemigrations --no-input &&
                    python manage.py migrate --no-input &&
                    python manage.py loaddata formula_studio/fixtures/init.json &&
                    python manage.py collectstatic --no-input &&
                    exec gunicorn App.wsgi:application -b 0.0.0.0:8000 --reload"
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        image: app-image
        depends_on:
            - postgres
        networks:
            - main

    nginx:
        container_name: formula-studio-nginx
        image: nginx:alpine
        restart: "on-failure"
        ports:
            - "80:80"
        volumes:
            - ./docker/nginx/:/etc/nginx/conf.d
            - ./backend/staticfiles/:/usr/src/static/
            - ./docker/log/nginx/:/var/log/nginx/
        depends_on:
            - app
            - postgres
        networks:
            - main

networks:
    main:
        driver: bridge

volumes:
    postgresql-data:
